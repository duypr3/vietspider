/***************************************************************************
 * Copyright 2001-2009 The VietSpider         All rights reserved.  		 *
 **************************************************************************/
package org.vietspider.webui.search;

import java.io.OutputStream;
import java.net.URLEncoder;
import java.util.Iterator;
import java.util.Set;

import org.vietspider.chars.CharsUtil;
import org.vietspider.common.Application;
import org.vietspider.common.io.LogService;
import org.vietspider.content.index3.monitor.Query;
import org.vietspider.webui.search.seo.LastAccessData;

/** 
 * Author : Nhu Dinh Thuan
 *          nhudinhthuan@yahoo.com
 * Dec 15, 2009  
 */
public class TopQueriesRenderer {
  
  private static TopQueriesRenderer renderer;
  
  public synchronized static TopQueriesRenderer getInstance() {
    if(renderer == null) renderer = new TopQueriesRenderer();
    return renderer;
  }
  
  private long lastUpdate = -1;
  private byte[] data;
  
  private TopQueriesRenderer() {
  }
  
  public void write(OutputStream out) {  
    long current  = System.currentTimeMillis();
    if(data  == null || current - lastUpdate > 10*60*1000l) { 
      loadData();
      lastUpdate = current;
    }
    
    try {
      out.write(data);
    } catch (Exception e) {
      LogService.getInstance().setThrowable(e);
    }
  }
  
  private void loadData() {  
    try {
      StringBuilder builder = new StringBuilder();
      builder.append("<tr><td align=\"left\">");
      builder.append("<br><b>Thống kê từ khóa đã tìm</b><br>");
//      append(out, "<div>");
      Set<Query> queries = LastAccessData.getInstance().getQuerySet(); 
      Iterator<Query> iterator = queries.iterator();
      int counter = 0;
      builder.append("\n<table border=\"0\"><tr>");
      int total = 0;
      while(iterator.hasNext()) {
        if(counter == 5) {
          builder.append("\n</tr><tr>");
          counter = 0;
        }
        builder.append("<td>");
        generateLinkRegion(builder, iterator.next());
        builder.append("</td>");
        counter++;
        total++;
        if(total >= 25) break;
      }
      for(; counter < 6; counter++) {
        builder.append("<td></td>");
      }
      builder.append("</tr></table>");
      builder.append("</td></tr>");
      
      data = builder.toString().getBytes(Application.CHARSET);
//      append(out, "</div>");
      
    } catch (Exception e) {
      LogService.getInstance().setThrowable(e);
    }
  }
  
  private void generateLinkRegion(StringBuilder builder, Query query) throws Exception {
    builder.append("<a class=\"menu\" href=\"/site/search/1/?query=");
    builder.append(URLEncoder.encode(query.getPattern(), Application.CHARSET)); 
    builder.append("\" title=\"").append(query.getPattern()).append("\">");
    String label = CharsUtil.cutLabel(query.getPattern(), 14);
    builder.append("<b>").append(Character.toUpperCase(label.charAt(0))).append("</b>");
    builder.append(label, 1, label.length()).append("</a>");
    builder.append('(').append(query.getTotal()).append(')');
  }
  
}
