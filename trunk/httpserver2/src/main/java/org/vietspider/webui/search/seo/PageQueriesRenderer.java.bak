/***************************************************************************
 * Copyright 2001-2009 The VietSpider         All rights reserved.  		 *
 **************************************************************************/
package org.vietspider.webui.search.seo;

import java.io.OutputStream;
import java.util.Iterator;
import java.util.Set;

import org.vietspider.common.Application;
import org.vietspider.common.io.LogService;
import org.vietspider.content.index3.monitor.Query;
import org.vietspider.webui.search.page.PageChunk;

/** 
 * Author : Nhu Dinh Thuan
 *          nhudinhthuan@yahoo.com
 * Dec 15, 2009  
 */
public class PageQueriesRenderer {

  private PageChunk pageHeader = new PageChunk("seo_page_header.xml");
  private PageChunk pageFooter = new PageChunk("page_footer.xml");

  public PageQueriesRenderer() {
  }

  public void write(OutputStream output) { 
    pageHeader.write(output, "Tìm kiếm nhà đất");
    try {
      output.write(loadData());
    } catch (Exception e) {
      LogService.getInstance().setThrowable(e);
    }
    pageFooter.write(output, "Tìm kiếm nhà đất");
  }

  private byte[] loadData() {  
    try {
      StringBuilder builder = new StringBuilder();
      builder.append("<tr><td align=\"left\">");
      builder.append("<br><b>Thống kê từ khóa đã tìm</b><br>");
      //      append(out, "<div>");
      Set<Query> queries = LastAccessData.getInstance().getQuerySet(); 
//        SearchMonitor.getInstance().getTopQuery();
      Iterator<Query> iterator = queries.iterator();
      int counter = 0;
      builder.append("\n<table border=\"0\"><tr>");
      int total = 0;
      while(iterator.hasNext()) {
        if(counter == 7) {
          builder.append("\n</tr><tr>");
          counter = 0;
        }
        builder.append("<td>");
        generateLinkRegion(builder, iterator.next());
        builder.append("</td>");
        counter++;
        total++;
      }
      for(; counter < 8; counter++) {
        builder.append("<td></td>");
      }
      builder.append("</tr></table>");
      builder.append("</td></tr>");

      return builder.toString().getBytes(Application.CHARSET);
      //      append(out, "</div>");

    } catch (Exception e) {
      LogService.getInstance().setThrowable(e);
    }
    return "".getBytes();
  }

  private void generateLinkRegion(StringBuilder builder, Query query) throws Exception {
    builder.append("<a class=\"menu\" href=\"/site/page_s/");
    builder.append(toFileName(query.getPattern()));
    builder.append("\" title=\"").append(query.getPattern()).append("\">");
    builder.append("<b>").append(query.getPattern()).append("</b></a>");
    builder.append('(').append(query.getTotal()).append(')');
  }
  
  static String toFileName(String text) {
    StringBuilder builder = new StringBuilder();
    for(int i = 0; i < text.length(); i++) {
      char c = text.charAt(i);
      switch (c) {
      case 'À':
      case 'Á':
      case 'Ả':
      case 'Ã':
      case 'Ạ': 

      case 'Ă': 
      case 'Ằ': 
      case 'Ắ': 
      case 'Ẳ': 
      case 'Ẵ': 
      case 'Ặ': 

      case 'Â': 
      case 'Ầ': 
      case 'Ấ': 
      case 'Ẩ': 
      case 'Ẫ': 
      case 'Ậ':
        builder.append('A');
        break;

      case 'à':
      case 'á':     
      case 'ả':
      case 'ã':
      case 'ạ':

      case 'ă': 
      case 'ằ': 
      case 'ắ': 
      case 'ẳ': 
      case 'ẵ': 
      case 'ặ':

      case 'â': 
      case 'ầ': 
      case 'ấ': 
      case 'ẩ': 
      case 'ẫ': 
      case 'ậ':
        builder.append('a');
        break;

      case 'Đ': 
        builder.append('D');
        break;

      case 'đ': 
        builder.append('d');
        break;

      case 'È': 
      case 'É': 
      case 'Ẻ': 
      case 'Ẽ': 
      case 'Ẹ':

      case 'Ê':
      case 'Ề': 
      case 'Ế': 
      case 'Ể': 
      case 'Ễ': 
      case 'Ệ':
        builder.append('E');
        break;

      case 'è': 
      case 'é': 
      case 'ẻ': 
      case 'ẽ': 
      case 'ẹ': 

      case 'ê':
      case 'ề': 
      case 'ế': 
      case 'ể': 
      case 'ễ': 
      case 'ệ':
        builder.append('e');
        break;

      case 'Ì': 
      case 'Í': 
      case 'Ỉ': 
      case 'Ĩ': 
      case 'Ị':
        builder.append('I');
        break;  

      case 'ì': 
      case 'í': 
      case 'ỉ': 
      case 'ĩ': 
      case 'ị':
        builder.append('i');
        break;     
      case 'Ò': 
      case 'Ó': 
      case 'Ỏ': 
      case 'Õ': 
      case 'Ọ':

      case 'Ô':
      case 'Ồ': 
      case 'Ố': 
      case 'Ổ': 
      case 'Ỗ': 
      case 'Ộ':

      case 'Ơ': 
      case 'Ờ': 
      case 'Ớ': 
      case 'Ở': 
      case 'Ỡ': 
      case 'Ợ': 
        builder.append('O');
        break;

      case 'ò': 
      case 'ó': 
      case 'ỏ': 
      case 'õ': 
      case 'ọ': 

      case 'ô':
      case 'ồ': 
      case 'ố': 
      case 'ổ': 
      case 'ỗ': 
      case 'ộ': 

      case 'ơ': 
      case 'ờ':
      case 'ớ': 
      case 'ở': 
      case 'ỡ': 
      case 'ợ': 
        builder.append('o');
        break;

      case 'Ù': 
      case 'Ú': 
      case 'Ủ': 
      case 'Ũ': 
      case 'Ụ':

      case 'Ư': 
      case 'Ừ': 
      case 'Ứ': 
      case 'Ử': 
      case 'Ữ': 
      case 'Ự':
        builder.append('U');
        break;

      case 'ù': 
      case 'ú': 
      case 'ủ':
      case 'ũ': 
      case 'ụ': 

      case 'ư': 
      case 'ừ':
      case 'ứ': 
      case 'ử': 
      case 'ữ': 
      case 'ự':
        builder.append('u');
        break;

      case 'Ỳ': 
      case 'Ý': 
      case 'Ỷ':
      case 'Ỹ': 
      case 'Ỵ': 
        builder.append('Y');
        break;

      case 'ỳ': 
      case 'ý': 
      case 'ỷ': 
      case 'ỹ': 
      case 'ỵ': 
        builder.append('y');
        break;
      default: 
        if(Character.isLetterOrDigit(c)) {
          builder.append(c);
        } else {
          builder.append('_');
        }
        break;
      }
    }
    builder.append(".html");
    return builder.toString();
  }

}
