/***************************************************************************
 * Copyright 2001-2011 The VietSpider         All rights reserved.  		 *
 **************************************************************************/
package org.vietspider.db.source.trackid;

import java.io.File;
import java.util.Date;

import org.vietspider.bean.Domain;
import org.vietspider.chars.CharsUtil;
import org.vietspider.common.io.UtilFile;
import org.vietspider.common.text.CalendarUtils;
import org.vietspider.model.TrackId;

/** 
 * Author : Nhu Dinh Thuan
 *          nhudinhthuan@yahoo.com
 * Aug 21, 2011  
 */
public class TrackIdService /*extends Thread*/ {
  
  private final static TrackIdService INSTANCE = new TrackIdService();
  
  public final static TrackIdService getInstance() { return  INSTANCE; }

//  private TrackId current;
//  private int counter = 0;
  
  public TrackIdService() {
//    Application.addShutdown(new Application.IShutdown() {
//      public String getMessage() { return "Save Track Id";}
//
//      public void execute() {
//        try {
//          saveCurrent();
//        } catch (Throwable e) {
//          LogService.getInstance().setThrowable(e);
//        }
//      }
//    });
//    this.start();
  }
  
/*  public void run() {
    while(true) {

      if(counter > 10) {
        try {
          saveCurrent();
        } catch (Exception e) {
          LogService.getInstance().setThrowable(e);
        }
      }
      
      try {
        Thread.sleep(10*1000l);
      } catch (Exception e) {
      }
    }
  }*/
  
  public TrackId load(String date) throws Exception {
    Date dateInstance = CalendarUtils.getDateFormat().parse(date);
    String fileName = CalendarUtils.getFolderFormat().format(dateInstance);
    File folder = new File(UtilFile.getFolder("content/summary/eid"), fileName+"/");
    
    TrackId trackId = new TrackId(date, TrackId.DATE);
    if(!folder.exists() || folder.length() < 1) return trackId;
    
    
    File [] files = folder.listFiles();
    for(int i = 0; i < files.length; i++) {
      String name  = files[i].getName();
      String [] elements = CharsUtil.split2Array(name, '.');
      if(elements.length < 4) continue;
      Domain domain = new Domain(date, elements[1], elements[2], elements[3]);
      trackId.addId(domain, "0");
//      RandomAccessFile random = new RandomAccessFile(files[i], "rws");
//      while(random.getFilePointer() < files[i].length()) {
//        long id = random.readLong();
//        int status = random.readInt();
//        trackId.addId(domain, String.valueOf(id));
////        System.out.println(random.readLong() + " : "+ random.readInt());
//      }
      System.out.println(files[i].getName());
    }
    
    
    return trackId;
    
    
    
//    if(current.getName().equals(date)) return current;
//    Date dateInstance = CalendarUtils.getDateFormat().parse(date);
//    String fileName = CalendarUtils.getFolderFormat().format(dateInstance);
//    File file = new File(UtilFile.getFolder("content/track/"), fileName);
//    if(!file.exists() || file.length() < 1) {
//      return new TrackId(date, TrackId.DATE); 
//    }
//    byte [] bytes = new DataReader().load(file);
//    return XML2Object.getInstance().toObject(TrackId.class, bytes);
  }
  
//  private void saveCurrent() throws Exception {
//    if(current == null) return;
//    Date dateInstance = CalendarUtils.getDateFormat().parse(current.getName());
//    String fileName = CalendarUtils.getFolderFormat().format(dateInstance);
//    File file = new File(UtilFile.getFolder("content/track/"), fileName);
//    String text = Object2XML.getInstance().toXMLDocument(current).getTextValue();
//    new DataWriter().save(file, text.getBytes(Application.CHARSET));
//    counter = 0;
//  }
//  
//  public void save(Domain domain, String id) {
//    synchronized (current) {
//      if(current == null) {
//        current = new TrackId(domain.getDate(), TrackId.DATE);
//      }
//    };
//    current.addId(domain, id, TrackId.DATE);
//    counter++;
//  }
}
