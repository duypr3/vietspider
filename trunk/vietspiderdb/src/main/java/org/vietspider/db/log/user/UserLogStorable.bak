/***************************************************************************
 * Copyright 2001-2008 The VietSpider         All rights reserved.  		 *
 **************************************************************************/
package org.headvances.vietspider.log.user;

import java.nio.ByteBuffer;

import org.headvances.storage.v3.ByteBufferUtil;
import org.headvances.storage.v3.MD5Hash;
import org.headvances.storage.v3.StoragePlugin;
import org.headvances.storage.v3.UTF8String;
import org.headvances.storage.v3.db.Record;

/** 
 * Author : Nhu Dinh Thuan
 *          nhudinhthuan@yahoo.com
 * Nov 26, 2008  
 */
public class UserLogStorable extends Record<MD5Hash> {
  
  private MD5Hash md5Id ;
  private UTF8String xml;
  protected String id;

  public UserLogStorable() { }
  
  public UserLogStorable(String id, String value) {
    this.id = id;
    this.xml = new UTF8String(value) ;
    this.md5Id = MD5Hash.digest(id) ;
  }
  
  public MD5Hash getMD5HashId() { return md5Id ; }
  public UTF8String getXML() { return xml; }
  
  public MD5Hash getId() { return md5Id ; }
  public void setId(String id) { this.id = id; }
  
  @Override
  public void update(Record<MD5Hash> arg0) {
    UserLogStorable other = (UserLogStorable)arg0;
    this.xml = other.getXML() ;
    this.id = other.id;
    this.md5Id = MD5Hash.digest(id) ;
  }

  @SuppressWarnings("all")
  public void read(StoragePlugin plugin, ByteBuffer buffer, String version) throws Exception {
    ByteBufferUtil.getFieldAsString(buffer, "version") ;
    md5Id = ByteBufferUtil.getField(buffer, "md5Id", new MD5Hash(), version) ;
    xml = ByteBufferUtil.getFieldAsUTF8String(buffer, "xml") ;
    id = ByteBufferUtil.getFieldAsString(buffer, "id") ;
  }

  @SuppressWarnings("all")
  public void write(StoragePlugin plugin, ByteBuffer buffer) throws Exception {
    ByteBufferUtil.putField(buffer, "version", "1.0") ;
    ByteBufferUtil.putField(buffer, "md5Id", md5Id) ;
    ByteBufferUtil.putField(buffer, "xml", xml) ;
    ByteBufferUtil.putField(buffer, "id", id) ;
  }

  public void setXml(String xml) { this.xml = new UTF8String(xml); }

  
  
}
