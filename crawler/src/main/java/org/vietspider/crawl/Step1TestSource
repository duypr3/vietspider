/***************************************************************************
 * Copyright 2001-2008 The VietSpider         All rights reserved.  		 *
 **************************************************************************/
package org.vietspider.crawl;

//import static org.vietspider.crawl.test.ErrorLabel.EMPTY_TEXT;
//import static org.vietspider.crawl.test.ErrorLabel.NO_DATA;

import org.vietspider.crawl.link.Link;
//import org.vietspider.crawl.test.DataPatternTester;
//import org.vietspider.crawl.test.DownloadDataService;
//import org.vietspider.crawl.test.HomepageTester;
import org.vietspider.pool.Task;
import org.vietspider.pool.Worker;

/** 
 * Author : Nhu Dinh Thuan
 *          nhudinhthuan@yahoo.com
 * Mar 7, 2008  
 */
public class Step1TestSource extends CrawlTask {
  
//  private DownloadDataService downloadDataService;
//  private DataPatternTester dataPatternTester;
//  private HomepageTester homepageTester;
  
  public Step1TestSource() {
//    testDownloadData = new DownloadDataService(this);
//    dataPatternTester = new DataPatternTester(this);
//    homepageTester = new HomepageTester(this);
  }
  
  public Worker<?,?> getWorker() { return worker; }
  
  public Task<Link> cloneInstance() { return this; }
  
  public Link execute(Link link) throws Exception {
    if(link == null || !link.isTest()) return link;
    test(link);
    return null;
  }

  public void test(Link link) throws Exception {
//    char [] chars = testDownloadData.test(link);
//    
//    if(chars == null) {
//      addError(NO_DATA, link.getAddress());
//      return;
//    }
//
//    final String htmlText = new String(chars);
//
//    if(htmlText.trim().isEmpty()) {
//      addError(EMPTY_TEXT, link.getAddress());
//      return;
//    }
//
//    if(link.isLink()) {
//      homepageTester.test(link, chars, htmlText);
//    } else {
//      dataPatternTester.test(link, htmlText);
//    }
//    
    return;
  }
  
  public void addErrorValue(String value) {
    CrawlExecutor executor = (CrawlExecutor)worker.getExecutor();
//    executor.getStore().getProfiler().addError(new SourceError(null, value));
  }
  
  public void addError(String key) {
    CrawlExecutor executor = (CrawlExecutor)worker.getExecutor();
//    executor.getStore().getProfiler().addError(new SourceError(key, null));
  }
  
  public void addError(String key, String label) {
    CrawlExecutor executor = (CrawlExecutor)worker.getExecutor();
//    executor.getStore().getProfiler().addError(new SourceError(key, label));
  }
  
}
